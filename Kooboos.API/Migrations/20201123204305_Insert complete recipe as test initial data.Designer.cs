// <auto-generated />
using Kooboos.API.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kooboos.API.Migrations
{
    [DbContext(typeof(RecipeContext))]
    [Migration("20201123204305_Insert complete recipe as test initial data")]
    partial class Insertcompleterecipeastestinitialdata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kooboos.API.Ingredients.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Auberginen"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rosinen"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Zwiebel"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Selleriestangen"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Olivenöl"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Knoblauch"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Oliven mit Stein"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Zucker"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Rotweinessig"
                        },
                        new
                        {
                            Id = 10,
                            Name = "ganze Pelati"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Kapern"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Salz"
                        },
                        new
                        {
                            Id = 13,
                            Name = "schwarzer Pfeffer"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Pinienkerne"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Basilikum"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Ricotta salata"
                        });
                });

            modelBuilder.Entity("Kooboos.API.IngredientsLists.Entities.IngredientsList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("IngredientsLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RecipeId = 1,
                            Title = "Caponata"
                        },
                        new
                        {
                            Id = 2,
                            RecipeId = 1,
                            Title = "Zum Servieren"
                        });
                });

            modelBuilder.Entity("Kooboos.API.IngredientsLists.Entities.IngredientsListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientsListId")
                        .HasColumnType("int");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("IngredientsListId");

                    b.HasIndex("UnitId");

                    b.ToTable("IngredientsListItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IngredientId = 1,
                            IngredientsListId = 1,
                            Quantity = 400f,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            IngredientId = 2,
                            IngredientsListId = 1,
                            Quantity = 35f,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 3,
                            IngredientId = 3,
                            IngredientsListId = 1,
                            Quantity = 1f,
                            UnitId = 2
                        },
                        new
                        {
                            Id = 4,
                            IngredientId = 4,
                            IngredientsListId = 1,
                            Quantity = 3f,
                            UnitId = 2
                        },
                        new
                        {
                            Id = 5,
                            IngredientId = 5,
                            IngredientsListId = 1,
                            Quantity = 1f,
                            UnitId = 2
                        },
                        new
                        {
                            Id = 6,
                            IngredientId = 6,
                            IngredientsListId = 1,
                            Quantity = 1f,
                            UnitId = 3
                        },
                        new
                        {
                            Id = 7,
                            IngredientId = 7,
                            IngredientsListId = 1,
                            Quantity = 35f,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 8,
                            IngredientId = 8,
                            IngredientsListId = 1,
                            Quantity = 1f,
                            UnitId = 4
                        },
                        new
                        {
                            Id = 9,
                            IngredientId = 9,
                            IngredientsListId = 1,
                            Quantity = 0.3f,
                            UnitId = 5
                        },
                        new
                        {
                            Id = 10,
                            IngredientId = 10,
                            IngredientsListId = 1,
                            Quantity = 150f,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 11,
                            IngredientId = 11,
                            IngredientsListId = 1,
                            Quantity = 20f,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 12,
                            IngredientId = 12,
                            IngredientsListId = 1,
                            Quantity = 0f,
                            UnitId = 7
                        },
                        new
                        {
                            Id = 13,
                            IngredientId = 13,
                            IngredientsListId = 1,
                            Quantity = 0f,
                            UnitId = 7
                        },
                        new
                        {
                            Id = 14,
                            IngredientId = 14,
                            IngredientsListId = 2,
                            Quantity = 60f,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 15,
                            IngredientId = 5,
                            IngredientsListId = 2,
                            Quantity = 0f,
                            UnitId = 7
                        },
                        new
                        {
                            Id = 16,
                            IngredientId = 15,
                            IngredientsListId = 2,
                            Quantity = 4f,
                            UnitId = 6
                        },
                        new
                        {
                            Id = 17,
                            IngredientId = 16,
                            IngredientsListId = 2,
                            Quantity = 0f,
                            UnitId = 7
                        });
                });

            modelBuilder.Entity("Kooboos.API.Recipes.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(5000);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Instruction = "Für die Caponata die Auberginene in 2 cm grosse Würfel schneiden und in ein Sieb geben. Mit Salz bestreuen und 30 Minuten stehen lassen. Die Rosinen 15 Minuten in warmem Wasser einweichen. Die Ziwebel halbieren und in Streifen schneiden. Die Selleriestangen längs halbieren und schräg in 2 cm grosse Stücke schneiden. In einer Pfanneetwas Olivenöl erhitzen, die Ziebel und den Sellerie zugeben, den Knoblauch dazupressen und alles bei mittlerer Hitze zugedeckt 10 Minuten dünsten, ohne dass das Gemüse Farbe annimmt.Die Oliven entsteinen und halbieren - dafür mit dem Boden eines Glases leicht auf jede Olive schlagen, den Stein aus dem aufgesprungenen Fleisch pulen und dieses halbieren. In einer grossen Bratpfanne grosszügig Olivenöl erhitzen, die Auberginenwürfel mit Küchenpapier trotcken tupfen und in zwei Durchgängen schön braun braten - sie sollen nicht zu weich werden. Den Zucker zum Sellerie geben, die Hitze aufdrehen, sodass der Zucker schmilzt, dann mit dem Rotweinessig ablöschen.Die Pelati von Hand zerdrücken und mit den Kapern, den Rosinen, den Oliven und den Auberginenwürfeln zum Sellerie geben, alles einmal aufkochen und dann bei schwacher Hitze 5 Minuten köcheln. Mit Salz und Pfeffer abschmecken und etwas abkühlen lassen.",
                            Title = "Cavatelli mit Caponata, Basilikum, Pinienkerne und Ricotta Salata"
                        });
                });

            modelBuilder.Entity("Kooboos.API.Units.Entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "g"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Zehe"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Stück"
                        },
                        new
                        {
                            Id = 4,
                            Name = "TL"
                        },
                        new
                        {
                            Id = 5,
                            Name = "dl"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Zweig"
                        },
                        new
                        {
                            Id = 7,
                            Name = " "
                        });
                });

            modelBuilder.Entity("Kooboos.API.IngredientsLists.Entities.IngredientsList", b =>
                {
                    b.HasOne("Kooboos.API.Recipes.Entities.Recipe", "Recipe")
                        .WithMany("IngredientsLists")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Kooboos.API.IngredientsLists.Entities.IngredientsListItem", b =>
                {
                    b.HasOne("Kooboos.API.Ingredients.Entities.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kooboos.API.IngredientsLists.Entities.IngredientsList", "IngredientsList")
                        .WithMany("IngredientsListItems")
                        .HasForeignKey("IngredientsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kooboos.API.Units.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
